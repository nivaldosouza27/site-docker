networks:
  app_net:
    driver: bridge

services:
  # Databases MYSQL para os bancos de Dash (Dev, Homol, Prod)
  db-dash:
    build:
      context: ./db-dash
      dockerfile: Dockerfile
      args:
        ENV: ${ENV}
    container_name: db-dash-${ENV}
    env_file: ./db-dash/.env.${ENV}
    ports:
      - "3307:3306"
    volumes:
      - dashdb-${ENV}-data:/var/lib/mysql

  # Databases MYSQL para os bancos de Manager (Dev, Homol, Prod)
  db-manager:
    build:
      context: ./db-manager
      dockerfile: Dockerfile
      args:
        ENV: ${ENV}
    container_name: db-manager-${ENV}
    env_file: ./db-manager/.env.${ENV}
    ports:
      - "3308:3306"
    volumes:
      - managerdb-${ENV}-data:/var/lib/mysql

  # Databases MYSQL para os bancos de Site (Dev, Homol, Prod)
  db-site:
    build:
      context: ./db-site
      dockerfile: Dockerfile
      args:
        ENV: ${ENV}
    container_name: db-site-${ENV}
    env_file: ./db-site/.env.${ENV}
    ports:
      - "3309:3306"
    volumes:
      - sitedb-${ENV}-data:/var/lib/mysql

  # PHPMyAdmin para os bancos de Dash
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin-${ENV}
    restart: always
    ports:
      - "5051:80"
    environment:
      PMA_HOSTS: db-dash-${ENV},db-manager-${ENV},db-site-${ENV}
      PMA_USER: root
      PMA_PASSWORD: root
    depends_on:
      - db-dash
      - db-manager
      - db-site

  # APIs NestJS + Prisma
  api-dash:
    build:
      context: ./api-dash
      dockerfile: ./Docker/Dockerfile.${ENV}
      args:
        ENV: ${ENV}
    container_name: api-dash
    ports:
      - "3001:3000"
    depends_on:
      - db-dash
    networks:
      - app_net

  api-manager:
    build:
      context: ./api-manager
      dockerfile: ./Docker/Dockerfile.${ENV}
      args:
        ENV: ${ENV}
    container_name: api-manager
    ports:
      - "3002:3000"
    depends_on:
      - db-manager
    networks:
      - app_net

  api-site:
    build:
      context: ./api-site
      dockerfile: ./Docker/Dockerfile.${ENV}
      args:
        ENV: ${ENV}
    container_name: api-site
    ports:
      - "3003:3000"
    depends_on:
      - db-site
    networks:
      - app_net

  # Frontends Next.js
  front-dash:
    build:
      context: ./front-dash
      dockerfile: ./Docker/Dockerfile.${ENV}
      args:
        ENV: ${ENV}
    container_name: front-dash
    ports:
      - "3020:3000"
    depends_on:
      - api-dash
    networks:
      - app_net

  front-site:
    build:
      context: ./front-site
      dockerfile: ./Docker/Dockerfile.${ENV}
      args:
        ENV: ${ENV}
    container_name: front-site
    ports:
      - "3021:3000"
    depends_on:
      - api-site
    networks:
      - app_net

volumes:
  dashdb-dev-data:
  dashdb-homol-data:
  dashdb-prod-data:
  managerdb-dev-data:
  managerdb-homol-data:
  managerdb-prod-data:
  sitedb-dev-data:
  sitedb-homol-data:
  sitedb-prod-data:
